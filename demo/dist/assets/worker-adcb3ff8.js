let t,c=0,f=null;function b(){return(f===null||f.byteLength===0)&&(f=new Uint8Array(t.memory.buffer)),f}const w=new TextEncoder("utf-8"),S=typeof w.encodeInto=="function"?function(e,n){return w.encodeInto(e,n)}:function(e,n){const o=w.encode(e);return n.set(o),{read:e.length,written:o.length}};function m(e,n,o){if(o===void 0){const s=w.encode(e),_=n(s.length);return b().subarray(_,_+s.length).set(s),c=s.length,_}let i=e.length,a=n(i);const l=b();let r=0;for(;r<i;r++){const s=e.charCodeAt(r);if(s>127)break;l[a+r]=s}if(r!==i){r!==0&&(e=e.slice(r)),a=o(a,i,i=r+e.length*3);const s=b().subarray(a+r,a+i),_=S(e,s);r+=_.written}return c=r,a}let d=null;function T(){return(d===null||d.byteLength===0)&&(d=new Uint32Array(t.memory.buffer)),d}function y(e,n){const o=n(e.length*4);return T().set(e,o/4),c=e.length,o}let u=null;function g(){return(u===null||u.byteLength===0)&&(u=new Int32Array(t.memory.buffer)),u}const I=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});I.decode();function R(e,n){return I.decode(b().subarray(e,e+n))}function k(e,n,o,i,a){try{const s=t.__wbindgen_add_to_stack_pointer(-16),_=m(e,t.__wbindgen_malloc,t.__wbindgen_realloc),p=c,h=m(n,t.__wbindgen_malloc,t.__wbindgen_realloc),A=c,v=y(o,t.__wbindgen_malloc),U=c,M=y(i,t.__wbindgen_malloc),W=c;t.scramble(s,_,p,h,A,v,U,M,W,a);var l=g()[s/4+0],r=g()[s/4+1];return R(l,r)}finally{t.__wbindgen_add_to_stack_pointer(16),t.__wbindgen_free(l,r)}}function x(e,n,o,i,a){try{const s=t.__wbindgen_add_to_stack_pointer(-16),_=m(e,t.__wbindgen_malloc,t.__wbindgen_realloc),p=c,h=m(n,t.__wbindgen_malloc,t.__wbindgen_realloc),A=c,v=y(o,t.__wbindgen_malloc),U=c,M=y(i,t.__wbindgen_malloc),W=c;t.solve(s,_,p,h,A,v,U,M,W,a);var l=g()[s/4+0],r=g()[s/4+1];return R(l,r)}finally{t.__wbindgen_add_to_stack_pointer(16),t.__wbindgen_free(l,r)}}async function E(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(i){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",i);else throw i}const o=await e.arrayBuffer();return await WebAssembly.instantiate(o,n)}else{const o=await WebAssembly.instantiate(e,n);return o instanceof WebAssembly.Instance?{instance:o,module:e}:o}}function O(){const e={};return e.wbg={},e}function C(e,n){return t=e.exports,L.__wbindgen_wasm_module=n,u=null,d=null,f=null,t}async function L(e){typeof e>"u"&&(e=new URL("/solver/assets/solver_wasm_bg-b8c64484.wasm",self.location));const n=O();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:o,module:i}=await E(await e,n);return C(o,i)}onmessage=function(e){const{method:n,alg:o,moves:i,onlyOrientation:a,disregard:l,maxSolutions:r}=e.data;L(new URL("/solver/assets/solver_wasm_bg-b8c64484.wasm",self.location)).then(()=>{if(n==="scramble"){const s=k(o,i,new Uint32Array(a),new Uint32Array(l),r);postMessage(s)}else if(n==="solve"){const s=x(o,i,new Uint32Array(a),new Uint32Array(l),r);postMessage(s)}else console.error("Unknown method: "+e.method)})};
